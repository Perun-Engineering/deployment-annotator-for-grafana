apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment-annotator-controller.fullname" . }}
  labels:
    {{- include "deployment-annotator-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "deployment-annotator-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deployment-annotator-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deployment-annotator-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: health
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GRAFANA_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deployment-annotator-controller.fullname" . }}-config
                  key: GRAFANA_URL
            - name: WATCH_DEPLOYMENTS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deployment-annotator-controller.fullname" . }}-config
                  key: WATCH_DEPLOYMENTS
            - name: WATCH_STATEFULSETS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deployment-annotator-controller.fullname" . }}-config
                  key: WATCH_STATEFULSETS
            - name: WATCH_DAEMONSETS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deployment-annotator-controller.fullname" . }}-config
                  key: WATCH_DAEMONSETS
            - name: GRAFANA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "deployment-annotator-controller.fullname" . }}-grafana
                  key: GRAFANA_API_KEY
            - name: LOG_LEVEL
              value: {{ .Values.controller.log.level | quote }}
            - name: LOG_DEVELOPMENT
              value: {{ .Values.controller.log.development | quote }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
